version: '3.8'
name: twenty

services:
  change-vol-ownership:
    image: ubuntu
    user: root
    volumes:
      - server-local-data:/tmp/server-local-data
      - docker-data:/tmp/docker-data
    command: |
      bash -c "chown -R 1000:1000 /tmp/server-local-data && chown -R 1000:1000 /tmp/docker-data"
    networks:
      - coolify-net
    restart: 'no'

  server:
    image: twentycrm/twenty:${TAG:-latest}
    env_file:
      - ../../.env
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
      - docker-data:/app/docker-data
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://${TWENTY_DB_USER}:${TWENTY_DB_PASS}@postgresql:${POSTGRES_PORT}/${TWENTY_DB}
      SERVER_URL: ${TWENTY_HOST}
      REDIS_URL: ${TWENTY_REDIS_URL:-redis://twenty-redis:6379}
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      APP_SECRET: ${APP_SECRET:-replace_me_with_a_random_string}
    labels:
      - traefik.enable=true
      - traefik.http.routers.twenty.rule=Host(`${TWENTY_HOST}`)
      - traefik.http.routers.twenty.entrypoints=https
      - traefik.http.routers.twenty.tls=true
      - traefik.http.routers.twenty.tls.certresolver=letsencrypt
      - traefik.http.services.twenty.loadbalancer.server.port=3000
    depends_on:
      change-vol-ownership:
        condition: service_completed_successfully
      redis:
        condition: service_started
      postgresql:
        condition: service_healthy
    networks:
      - coolify-net
    healthcheck:
      test: curl --fail http://localhost:3000/healthz || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  worker:
    image: twentycrm/twenty:${TAG:-latest}
    volumes:
      - server-local-data:/app/packages/twenty-server/.local-storage
    command:
      - yarn
      - worker:prod
    environment:
      PG_DATABASE_URL: postgres://${TWENTY_DB_USER}:${TWENTY_DB_PASS}@postgresql:${POSTGRES_PORT}/${TWENTY_DB}
      SERVER_URL: ${TWENTY_HOST}
      REDIS_URL: ${TWENTY_REDIS_URL:-redis://twenty-redis:6379}
      DISABLE_DB_MIGRATIONS: true
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      APP_SECRET: ${APP_SECRET:-replace_me_with_a_random_string}
    depends_on:
      server:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - coolify-net
    restart: always

  redis:
    image: redis:7
    command:
      - '--maxmemory-policy'
      - noeviction
    networks:
      - coolify-net
    restart: always

volumes:
  docker-data:
  server-local-data:

networks:
  coolify-net:
    external: true
