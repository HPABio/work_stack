version: "3.8"

services:
  postgresql:
    image: postgres:16-alpine
    container_name: postgresql
    restart: always
    networks:
      - coolify-net
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:rw
    environment:
      - POSTGRES_USER=${POSTGRES_SUPERUSER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPERPASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10
  psql-twenty:
    image: postgres:16-alpine
    container_name: psql-twenty
    restart: always
    networks:
      - coolify-net
    volumes:
      - psql-twenty-data:/var/lib/psql-twenty/data
    environment:
      - POSTGRES_USER=${POSTGRES_SUPERUSER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPERPASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10
  
  psql-calcom:
    image: postgres:16-alpine
    container_name: psql-calcom
    restart: always
    networks:
      - coolify-net
    volumes:
      - psql-calcom-data:/var/lib/psql-calcom/data
    environment:
      - POSTGRES_USER=${POSTGRES_SUPERUSER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPERPASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10
  
  psql-huly:
    image: postgres:16-alpine
    container_name: psql-huly
    restart: always
    networks:
      - coolify-net
    volumes:
      - psql-huly-data:/var/lib/psql-huly/data
    environment:
      - POSTGRES_USER=${POSTGRES_SUPERUSER}
      - POSTGRES_PASSWORD=${POSTGRES_SUPERPASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 10

volumes:
  postgresql-data:
  psql-twenty-data:
  psql-calcom-data:
  psql-huly-data:

networks:
  coolify-net:
    external: true

